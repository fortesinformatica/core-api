<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-12-31 at 12:55:10.
 */
class ObjectParserTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var ObjectParser
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ObjectParser;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Nash\Client\Util\ObjectParser::toArray
     * @todo   Implement testToArray().
     */
    public function testToArray()
    {
        $object = new ObjectParserTestObject;
        $object->setName("Gean");
        
        $arr = ObjectParser::toArray($object);
        
        $this->assertEquals(2, count($arr));
        $this->assertEquals("Gean", $arr["name"]);
        $this->assertNull($arr["idade"]);
    }
    
    public function testToArrayParaPropriedadesComplexas() {
        $single = new ObjectParserTestObject;
        $single->setName("Gean");
        $single->setIdade(26);
        $object = new ObjectParserTestComplexObject;
        $object->setSingleValue("Hello");
        $object->setSingleObject($single);
        
        $arr = ObjectParser::toArray($object);
        
        $this->assertEquals(3, count($arr));
        $this->assertEquals("Hello", $arr["singleValue"]);
        $this->assertEquals("Gean", $arr["singleObject.name"]);
        $this->assertEquals(26, $arr["singleObject.idade"]);
    }
    
    public function testToArrayParaPropriedadesComplexasComTresNiveis() {
        $single = new ObjectParserTestObject;
        $single->setName("Gean");
        $single->setIdade(26);
        $complex = new ObjectParserTestComplexObject;
        $complex->setSingleValue("Hello");
        $complex->setSingleObject($single);
        $object = new ObjectParserTestComplexObject2;
        $object->setComplexObject($complex);
        
        $arr = ObjectParser::toArray($object);
        
        $this->assertEquals(3, count($arr));
        $this->assertEquals("Hello", $arr["complexObject.singleValue"]);
        $this->assertEquals("Gean", $arr["complexObject.singleObject.name"]);
        $this->assertEquals(26, $arr["complexObject.singleObject.idade"]);
    }
}

class ObjectParserTestComplexObject2 {
    protected $complexObject;
    
    public function getComplexObject() {
        return $this->complexObject;
    }

    public function setComplexObject($complexObject) {
        $this->complexObject = $complexObject;
        return $this;
    }
}

class ObjectParserTestComplexObject {
    protected $singleValue;
    protected $singleObject;
    
    public function getSingleObject() {
        return $this->singleObject;
    }

    public function setSingleObject($singleObject) {
        $this->singleObject = $singleObject;
        return $this;
    }
    
    public function getSingleValue() {
        return $this->singleValue;
    }

    public function setSingleValue($singleValue) {
        $this->singleValue = $singleValue;
        return $this;
    }
}

class ObjectParserTestObject {
    protected $name;
    protected $idade;
    
    public function getName() {
        return $this->name;
    }

    public function getIdade() {
        return $this->idade;
    }

    public function setName($name) {
        $this->name = $name;
        return $this;
    }

    public function setIdade($idade) {
        $this->idade = $idade;
        return $this;
    }
}
